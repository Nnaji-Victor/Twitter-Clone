{"ast":null,"code":"import _defineProperty from\"/home/tanisk/twitter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/tanisk/twitter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/tanisk/twitter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import'../Css/Signin.css';import{Link}from'react-router-dom';import{useHistory}from'react-router-dom';import AuthContext from'../Context/Authorization/authContext';import AlertContext from'../Context/Alert/alertContext';import Alerts from'../Extra/Alerts';function Signin(props){var alertContext=useContext(AlertContext);var authContext=useContext(AuthContext);var setAlert=alertContext.setAlert;var login=authContext.login,error=authContext.error,clearErrors=authContext.clearErrors,isAuthenticated=authContext.isAuthenticated;useEffect(function(){if(isAuthenticated){props.history.push('/feed');}if(error==='Invalid Credentials'){setAlert(error,'danger');clearErrors();}// eslint-disable-next-line\n},[error,isAuthenticated,props.history]);var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var email=user.email,password=user.password;var onChange=function onChange(e){return setUser(_objectSpread(_objectSpread({},user),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(email===''||password===''){setAlert('Please fill in all fields','danger');}else{login({email:email,password:password});}};return/*#__PURE__*/React.createElement(\"section\",{className:\"login-page\"},/*#__PURE__*/React.createElement(\"nav\",{className:\"login-page-nav\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"brand\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"},\" Home \")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"/\"},\"About\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"/\"},\"Language: English\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"login\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login-content\"},/*#__PURE__*/React.createElement(\"h2\",null,\" Log in to Twitter   \",/*#__PURE__*/React.createElement(\"i\",{style:{color:'#37A1F5'},class:\"fab fa-twitter\"}),\"   \"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit,className:\"login-form\"},/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",value:email,onChange:onChange,required:true,placeholder:\"Phone, email, or username\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",name:\"password\",value:password,onChange:onChange,required:true,placeholder:\"Password\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",value:\"login\",className:\"login-form-btn\"},\"Log In\"),/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",className:\"login-form-checkbox\",id:\"check\"}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"check\"},\"Remember me\"),/*#__PURE__*/React.createElement(\"a\",{href:\"/\"},\"Forgot password?\")))),/*#__PURE__*/React.createElement(\"footer\",{className:\"login-footer\"},/*#__PURE__*/React.createElement(\"div\",{style:{marginRight:'20px'}},\" \",/*#__PURE__*/React.createElement(Alerts,null),\" \"),/*#__PURE__*/React.createElement(\"p\",null,\"New to Twitter? \",/*#__PURE__*/React.createElement(Link,{to:\"/register\"},\"Sign up now\")))));}export default Signin;","map":{"version":3,"sources":["/home/tanisk/twitter/client/src/Component/User/Signin.js"],"names":["React","useContext","useState","useEffect","Link","useHistory","AuthContext","AlertContext","Alerts","Signin","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","push","email","password","user","setUser","onChange","e","target","name","value","onSubmit","preventDefault","color","marginRight"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport '../Css/Signin.css'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport AuthContext from '../Context/Authorization/authContext'\nimport AlertContext from '../Context/Alert/alertContext'\nimport Alerts from '../Extra/Alerts'\n\n\nfunction Signin(props) {\n\n    const alertContext = useContext(AlertContext);\n    const authContext = useContext(AuthContext);\n\n    const { setAlert } = alertContext;\n    const { login, error, clearErrors, isAuthenticated } = authContext;\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            props.history.push('/feed');\n        }\n\n        if (error === 'Invalid Credentials') {\n            setAlert(error, 'danger');\n            clearErrors();\n        }\n        // eslint-disable-next-line\n    }, [error, isAuthenticated, props.history]);\n\n    const [user, setUser] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = user;\n\n    const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (email === '' || password === '') {\n            setAlert('Please fill in all fields', 'danger');\n        } else {\n            login({\n                email,\n                password\n            });\n        }\n    };\n\n\n    return (\n        <section className=\"login-page\">\n            {/* login page nav */}\n            <nav className=\"login-page-nav\">\n                <ul>\n                    <li className=\"brand\">\n                        <Link to=\"/\"> Home </Link>\n                    </li>\n                    <li><a href=\"/\">About</a></li>\n                    <li><a href=\"/\">Language: English</a></li>\n                </ul>\n            </nav>\n            {/* end of login page nav */}\n            {/* login */}\n            <div className=\"login\">\n\n\n                <div className=\"login-content\">\n                    <h2> Log in to Twitter   <i style={{ color: '#37A1F5', }} class=\"fab fa-twitter\"></i>   </h2>\n\n\n                    <form onSubmit={onSubmit} className=\"login-form\">\n\n                        <input\n                            type='email'\n                            name='email'\n                            value={email}\n                            onChange={onChange}\n                            required\n                            placeholder=\"Phone, email, or username\" />\n\n                        <input\n                            type='password'\n                            name='password'\n                            value={password}\n                            onChange={onChange}\n                            required\n                            placeholder=\"Password\" />\n                        <div>\n\n                            <button type=\"submit\" value='login' className=\"login-form-btn\">Log In</button>\n\n                            <input type=\"checkbox\" className=\"login-form-checkbox\" id=\"check\" />\n                            <label htmlFor=\"check\">Remember me</label>\n                            <a href=\"/\">Forgot password?</a>\n                        </div>\n                    </form>\n                </div>\n                <footer className=\"login-footer\">\n                    <div style={{ marginRight: '20px' }}> <Alerts /> </div>\n                    <p>New to Twitter? <Link to=\"/register\">Sign up now</Link></p>\n                    {/* <p>\n                        Already using Twirrer via text message?\n              <a href=\"/\">Activate your account</a>\n                    </p> */}\n                </footer>\n            </div>\n            {/* end of login */}\n        </section>\n    )\n}\n\nexport default Signin\n"]},"metadata":{},"sourceType":"module"}