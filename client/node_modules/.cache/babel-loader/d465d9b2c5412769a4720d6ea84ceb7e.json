{"ast":null,"code":"var _jsxFileName = \"/home/tanisk/twitter/client/src/Component/Extra/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../Context/Authorization/authContext';\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    authContext.loadUser(); //eslint-disable-next-line\n  }, []);\n  const {\n    isAuthenticated\n  } = authContext;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/tanisk/twitter/client/src/Component/Extra/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","rest","authContext","useEffect","loadUser","isAuthenticated","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AACrD,QAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;AACAM,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,WAAW,CAACE,QAAZ,GADY,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAsBH,WAA5B;AACA,sBACI,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,MAAM,EAAEK,KAAK,IAAI,CAACD,eAAD,gBAC9B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD8B,gBAG1B,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAOH;;AAED,eAAeR,YAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthContext from '../Context/Authorization/authContext'\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const authContext = useContext(AuthContext)\n    useEffect(() => {\n        authContext.loadUser();\n        //eslint-disable-next-line\n    }, [])\n\n    const { isAuthenticated } = authContext\n    return (\n        <Route {...rest} render={props => !isAuthenticated ? (\n            <Redirect to='/login' />\n        ) : (\n                <Component {...props} />\n            )} />\n    )\n}\n\nexport default PrivateRoute\n\n"]},"metadata":{},"sourceType":"module"}