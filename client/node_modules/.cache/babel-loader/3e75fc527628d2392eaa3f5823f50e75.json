{"ast":null,"code":"import _objectWithoutProperties from\"/home/tanisk/twitter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useContext,useEffect}from'react';import{Route,Redirect}from'react-router-dom';import AuthContext from'../Context/Authorization/authContext';function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var authContext=useContext(AuthContext);useEffect(function(){authContext.loadUser();//eslint-disable-next-line\n},[]);var isAuthenticated=authContext.isAuthenticated;return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){return!isAuthenticated?/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"}):/*#__PURE__*/React.createElement(Component,props);}}));}export default PrivateRoute;","map":{"version":3,"sources":["/home/tanisk/twitter/client/src/Component/Extra/PrivateRoute.js"],"names":["React","useContext","useEffect","Route","Redirect","AuthContext","PrivateRoute","Component","component","rest","authContext","loadUser","isAuthenticated","props"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,CAEA,QAASC,CAAAA,YAAT,MAAyD,IAAtBC,CAAAA,SAAsB,MAAjCC,SAAiC,CAARC,IAAQ,8CACrD,GAAMC,CAAAA,WAAW,CAAGT,UAAU,CAACI,WAAD,CAA9B,CACAH,SAAS,CAAC,UAAM,CACZQ,WAAW,CAACC,QAAZ,GACA;AACH,CAHQ,CAGN,EAHM,CAAT,CAFqD,GAO7CC,CAAAA,eAP6C,CAOzBF,WAPyB,CAO7CE,eAP6C,CAQrD,mBACI,oBAAC,KAAD,kBAAWH,IAAX,EAAiB,MAAM,CAAE,gBAAAI,KAAK,QAAI,CAACD,eAAD,cAC9B,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAD8B,cAG1B,oBAAC,SAAD,CAAeC,KAAf,CAHsB,EAA9B,GADJ,CAOH,CAED,cAAeP,CAAAA,YAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthContext from '../Context/Authorization/authContext'\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const authContext = useContext(AuthContext)\n    useEffect(() => {\n        authContext.loadUser();\n        //eslint-disable-next-line\n    }, [])\n\n    const { isAuthenticated } = authContext\n    return (\n        <Route {...rest} render={props => !isAuthenticated ? (\n            <Redirect to='/login' />\n        ) : (\n                <Component {...props} />\n            )} />\n    )\n}\n\nexport default PrivateRoute\n\n"]},"metadata":{},"sourceType":"module"}