{"ast":null,"code":"import _regeneratorRuntime from\"/home/tanisk/twitter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tanisk/twitter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tanisk/twitter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import AuthContext from'./authContext';import authReducer from'./authReducer';import axios from'axios';import setAuthToken from'./setAuthToken';import{prod_url}from'../../Config/url';import{Redirect}from'react-router-dom';import{REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_ERRORS}from'./types';var AuthState=function AuthState(props){var initialState={token:localStorage.getItem('token'),isAuthenticated:null,loading:true,error:null,user:null};//  l -> Authstate -> signup -> authstate-> login\nvar _useReducer=useReducer(authReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];//........Load User Starts here\nvar loadUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(localStorage.token){setAuthToken(localStorage.token);}_context.prev=1;_context.next=4;return axios.get(\"\".concat(prod_url,\"/api/v1/auth\"));case 4:res=_context.sent;console.log(res.data);dispatch({type:USER_LOADED,payload:res.data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);dispatch({type:AUTH_ERROR});case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function loadUser(){return _ref.apply(this,arguments);};}();//........Register User Starts here\nvar register=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData){var config,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Content-Type':'application/json'}};_context2.prev=1;_context2.next=4;return axios.post(\"\".concat(prod_url,\"/api/v1/users\"),formData,config);case 4:res=_context2.sent;dispatch({type:REGISTER_SUCCESS,payload:res.data});loadUser();_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);dispatch({type:REGISTER_FAIL,payload:_context2.t0.response.data.msg});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);}));return function register(_x){return _ref2.apply(this,arguments);};}();//.....\nvar login=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formData){var config,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// To make a post request we need to get Content type header of postman\nconfig={headers:{'Content-Type':'application/json'}};_context3.prev=1;_context3.next=4;return axios.post(\"\".concat(prod_url,\"/api/v1/auth\"),formData,config);case 4:res=_context3.sent;console.log(res.data);dispatch({type:LOGIN_SUCCESS,payload:res.data});loadUser();_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](1);dispatch({type:LOGIN_FAIL,payload:_context3.t0.response.data.msg});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[1,10]]);}));return function login(_x2){return _ref3.apply(this,arguments);};}();//........LogOut User Starts here\nvar logout=function logout(){dispatch({type:LOGOUT});};//........Clear Error Starts here\nvar clearErrors=function clearErrors(){dispatch({type:CLEAR_ERRORS});};return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:{token:state.token,isAuthenticated:state.isAuthenticated,loading:state.loading,user:state.user,error:state.error,register:register,loadUser:loadUser,login:login,logout:logout,clearErrors:clearErrors}},props.children);};export default AuthState;","map":{"version":3,"sources":["/home/tanisk/twitter/client/src/Component/Context/Authorization/AuthState.js"],"names":["React","useReducer","AuthContext","authReducer","axios","setAuthToken","prod_url","Redirect","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","user","state","dispatch","loadUser","get","res","console","log","data","type","payload","register","formData","config","headers","post","response","msg","login","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\nimport AuthContext from './authContext'\nimport authReducer from './authReducer'\nimport axios from 'axios'\nimport setAuthToken from './setAuthToken'\nimport { prod_url } from '../../Config/url'\nimport { Redirect } from 'react-router-dom'\n\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n} from './types'\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        error: null,\n        user: null\n    }\n\n    //  l -> Authstate -> signup -> authstate-> login\n    const [state, dispatch] = useReducer(authReducer, initialState)\n\n    //........Load User Starts here\n    const loadUser = async () => {\n        if (localStorage.token) {\n            setAuthToken(localStorage.token)\n        }\n        try {\n            const res = await axios.get(`${prod_url}/api/v1/auth`)\n            console.log(res.data)\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data\n            })\n        } catch (err) {\n            dispatch({\n                type: AUTH_ERROR\n            })\n        }\n    }\n\n    //........Register User Starts here\n    const register = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.post(`${prod_url}/api/v1/users`, formData, config);\n\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data\n            });\n\n            loadUser();\n        } catch (err) {\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: err.response.data.msg\n            });\n        }\n    };\n\n\n\n    //.....\n\n    const login = async formData => {\n        // To make a post request we need to get Content type header of postman\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post(`${prod_url}/api/v1/auth`, formData, config)\n            console.log(res.data)\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            })\n            loadUser();\n\n        } catch (err) {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data.msg\n            })\n        }\n    }\n\n\n    //........LogOut User Starts here\n    const logout = () => {\n        dispatch({ type: LOGOUT })\n    }\n\n    //........Clear Error Starts here\n    const clearErrors = () => {\n        dispatch({ type: CLEAR_ERRORS })\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            token: state.token,\n            isAuthenticated: state.isAuthenticated,\n            loading: state.loading,\n            user: state.user,\n            error: state.error,\n            register,\n            loadUser,\n            login,\n            logout,\n            clearErrors\n        }}>\n            {props.children}\n\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState"]},"metadata":{},"sourceType":"module"}